/**Селекторы*/

/***
Итак, еще раз: p.eee - такой селектор выбирает абзацы с классом eee.
А вот если я сделаю так: p .eee, то выберу все элементы
с классом eee, находящиеся внутри абзацев. Прочувствуйте эту разницу.
*/
/***
Псевдокласс first-child
Псевдокласс first-child выбирает элемент, который является первым потомком родителя.
li:first-child {
	color: red;
}
**/
/***
Псевдокласс last-child
Псевдокласс last-child выбирает элемент, который является последним потомком родителя.
селектор:last-child {
	color:red;
}
 */
/***
Псевдокласс nth-child
Псевдокласс nth-child выбирает элемент, который является n-ным потомком родителя.
селектор:nth-child(число | odd | even | выражение) {

}
li:nth-child(n + 7):nth-child(-n + 14){
    color: deepskyblue;
}
*/
/***
Псевдокласс only-child
Псевдокласс only-child выбирает элемент, который является единственным потомком родителя.
*/
/***
Псевдокласс first-of-type
Псевдокласс first-of-type выбирает элемент, который является первым потомком родителя заданного типа.
То есть, если написать h2:first-of-type - найдется первый h2 в родителе
(в отличии от first-child, который найдет только тот h2, который стоит самым первым в родителе).
*/
/***
Псевдокласс only-of-type
Псевдокласс only-of-type выбирает элемент, который является единственным потомком заданного типа.
*/
/***
Псевдокласс empty
Псевдокласс empty задает то, как будет выглядеть пустой элемент (не содержащий текста).
li:empty {
	border: 1px solid blue;
	list-style-type: circle;
	color: blue;
	width: 100px;
}
*/
/***
li:not(:first-child) {
	color: red;
}
*/



/**Оформление*/

/***
Картинка фона
body {
    background-image: url("image/bg (1).png");
    background-repeat: no-repeat;
}
*/
/***
Свойство background-position
Свойство background-position задает местоположение фоновой картинки элемента.
background-position: top right;
background-position: bottom right;
Свойство background-size
*/
/***
Свойство background-size задает размер картинки фона. Значением свойства
служат любые единицы для размеров, либо ключевые слова auto, cover или contain.
    background-size: cover | contain;
 */
/***
Свойство background-attachment
Свойство background-attachment задает каким образом прокручивать фоновую
картинку элемента: вместе с текстом или текст будет скользить по картинке.
	background-attachment: fixed | scroll | local;
	fixed	Картинка фона будет неподвижной, а текст будет скользить по ней.
	scroll	Картинка фона будет прокручиваться вместе с текстом.
 */
/***
Свойство background-clip
Свойство background-clip задает как фоновая
заливка или фоновая картинка будет размещаться
относительно элемента: часть фона будет залазить под границу,
фон не будет залазить под границу или фон будет размещаться
только над содержимым элемента (то есть padding отодвинет фон).
селектор {
	background-clip: padding-box | border-box | content-box;
}
border-box	Фон залезет под границу.
padding-box	Фон не будет залезать под границу
content-box	Фон будет только над содержимым.
*/
/***
    list-style-type: circle;
*/



/**Позиционирование*/


/***
Абсолютное позиционирование элементов на CSS
position: absolute;
top:
left:
right:
bottom:
*/
/***
Относительное позиционирование элементов на CSS
Относительное позиционирование
задается с помощью значения relative для свойства position.
*/
/***
Позиционирование относительно родителя на CSS
Если элементу задан relative, а его потомку - absolute, то этот потомок будет
позиционироваться относительно своего родителя, а не относительно окна браузера.
<div id="parent">
	<div id="child"></div>
</div>
#parent {
	position: relative;
	width: 500px;
	height: 300px;
	margin: 0 auto;
	border: 1px solid red;
}
#child {
	position: absolute;
	top: 20px;
	left: 20px;

	width: 200px;
	height: 200px;
	border: 1px solid green;
}
*/
/***
Позиционирование относительно абсолютного родителя на CSS
Может быть и такое, что у родителя задан absolute.
В этом случае потомки с absolute также будут
позиционироваться относительно такого родителя, а не относительно окна браузера:
*/
/***
Скругленные уголки на CSS
#h1 {
    color: black;
    border: 2px ridge deepskyblue;
    border-radius: 100px;
    background-color: hotpink;
}
Делаем круг
#elem {
    width: 100px;
    height: 100px;
    border-radius: 50px;
    border: 1px solid red;
}
*/
/***Фиксированное позиционирование
Можно сделать так, чтобы при прокручивании страницы
спозиционированный элемент оставался на месте. Для этого ему нужно задать
фиксированное позиционирование с помощью свойства position в значении fixed:
*/


/***
Псевдокласс lang
Псевдокласс lang выбирает текст по языку, заданному в атрибуте lang.
В качестве языка могут выступать следующие значения: ru — русский, en — английский, de — немецкий,
fr — французский, it — итальянский и так далее.
	Цитата на английском: <q lang="en">То
		be or not to be</q>.
 */
/***
Псевдоэлемент first-letter
Псевдоэлемент first-letter позволяет задать стили первой букве текста в элементе.
 */
/***
Псевдоэлемент first-line
Псевдоэлемент first-line позволяет задать стили первой линии текста.
 */
/***
Свойство transition-duration
Свойство transition-duration устанавливает время выполнения плавного перехода transition.
селектор {
	transition-duration: время в s или ms;
}
ul{
    transition-duration: 2s;
    transition-property: width;
    border: 3px dashed black;
    height: 80px;
    width: 210px;
}
ul:hover {
    width: 400px;
}
 */
/***
Свойство transition-delay
Свойство transition-delay устанавливает задержку перед запуском плавного перехода transition.
селектор {
	transition-delay: время в s или ms;
}
 */
/***
Свойство transition-property
Свойство transition-property устанавливает свойство,
которое будет анимироваться плавным переходом transition.
Значением следует передавать имя CSS свойства,которое будет анимироваться.
Если задать значение all (оно задано по умолчанию) - будут анимированы все свойства сразу.
 */
/***
Свойство transition-timing-function
Свойство transition-timing-function устанавливает скорость изменения (ускорение)
плавного перехода transition. Например, сначала медленно, потом быстро, потом медленно и т.д.
селектор {
	transition-timing-function: значение;
}
 */
/***
Команда @keyframes
Команда @keyframes задает ключевые кадры анимации.
 */
/***
Свойство animation-name
Свойство animation-name задает имя анимации (или анимаций),
которая будет применяться к данному элементу.
Имя анимации должно быть такое же, какое задано при определении ключевых кадров @keyframes.
селектор {
	animation-name: имя анимации;
}
 */
/***
Свойство animation-duration
Свойство animation-duration устанавливает время выполнения анимации.
селектор {
	animation-duration: время в s или ms;
}
 */
/***
            float with margin in css
<div>
	<img src="img.png" alt="">
	<p>
		Lorem ipsum dolor sit amet,
			consectetur adipiscing elitorire.
	</p>
	<p>
		длинный текст
	</p>
</div>
div {
	width: 400px;
	border: 1px solid red;
	text-align: justify;
}
p {
	margin-left: 30px;
	border: 1px solid green;
}
img {
	float: left;=>picture left
	opacity: 0.5;=>prozrachnost
}
*/
/***
 плавающая картинка расширяла наш див по высоте.
<div class="parent">
    <img src="image/img.png" alt="">
    <div class="clearfix"></div>
</div>
.parent {
    border: 1px solid red;
}
.parent img {
    float: left;
}
.clearfix {
    clear: both;
}
*/
/***
Значение row-reverse
Значение row-reverse также позволяет выстраивать блоки в ряд,
прижимая их к правому краю.
При этом происходит переворот порядка - первый блок будет самым правым:
.parent	{
	display: flex;
	flex-direction: row-reverse;
	width: 300px;
	height: 200px;
	border: 1px solid red;
}
*/
/***
Значение column-reverse
Зададим теперь значение column-reverse. В этом случае колонка будет перевернутой
 - элементы будут прижаты к низу, при этом первый элемент будет самым нижним:
 .parent	{
 	display: flex;
 	flex-direction: column-reverse;
 	width: 300px;
 	height: 200px;
 	border: 1px solid red;
 }
*/
/***
Выравнивание флекс элементов по главной оси
    flex-direction: row; /* главная
		ось слева направо */
	justify-content: flex-start; /* блоки к
		началу главной оси */
Выравнивание флекс блоков по поперечной оси CSS
    .parent	{
    	display: flex;
    	flex-direction:  row;        /* главная
    		ось направо, поперечная вниз */
    	justify-content: flex-start; /* блоки к
    		началу главной оси */
    	align-items:     flex-start; /* блоки к
    		началу поперечной оси */
    }
*/
/***
Значение stretch свойства align-items
Свойство align-items по умолчанию имеет значение stretch.
Это значение растягивает элементы на всю ширину вдоль поперечной оси.
*/
/***
Выравнивание отдельного элемента в flex модели
свойство aling-self, которое выраванивает отдельный блок по поперечной оси.
.in_border2 {
    align-self: start;
}
*/


//////////Высший учебник HTML и CSS Продвинутое//////////////////


/***
Специальные теги для элементов макета сайта
Существуют специальные теги для элементов макета сайта. Использование
таких тегов улучшает семантику кода, то есть придает ему больше смысла.
*/
/***
Свойство letter-spacing
Свойство letter-spacing устанавливает интервал между буквами.
*/
/***
Свойство word-spacing
Свойство word-spacing устанавливает интервал между словами.
*/
/***
Свойство font-variant
селектор {
	font-variant: small-caps | normal;
}
*/
/***
Свойство text-transform
Свойство text-transform устанавливаетрегистр символов текста:
 верхний регистр (заглавные буквы), нижний регистр (строчные
 маленькие буквы), может делать заглавной первую букву каждого слова.
*/
/***
Свойство column-count
Свойство column-count задает
 рекомендуемое количество колонок в многоколоночном тексте.
 селектор {
 	column-count: число | auto;
 }
*/
/***
Свойство column-width
Свойство column-width задает ширину колонок в многоколоночном тексте.
селектор {
	column-width: значение;
}
#elem {
	column-count: auto;
	column-width: 150px;
	text-align: justify;
}
*/
/***
Свойство columns
Свойство columns задает одновременно ширину и количество колонок
селектор {
	columns: ширина количество;
}
*/
/***
Свойство column-rule
Свойство column-rule задает границу между колонками
многоколоночном тексте. По принимаемым значениям
совпадает со свойством border.
#elem {
	column-rule: 1px solid black;
	column-count: 3;
	column-gap: normal;
	text-align: justify;
}
*/
/***
Свойство column-gap
Свойство column-gap задает расстояние между колонками
#elem {
	column-count: 3;
	column-gap: 50px;
	text-align: justify;
}
*/
/***
Свойство column-span
Свойство column-span задает количество столбцов,
на которые должен растягиваться элемент в многоколоночном тексте.
Свойство значением принимает либо число 1, либо ключевое слово all.
При значении 1 элемент будет охватывать одну колонку,
а при значении all - все колонки.
#elem h2 {
	column-span: 1;
	margin: 0;
}
#elem {
	column-count: 3;
	text-align: justify;
}
*/
/***
Свойство pointer-events
Свойство pointer-events позволяет убрать реакцию элемента на события мыши.
селектор {
	pointer-events: none | auto;
}
*/
/***
Псевдоэлемент selection
Псевдоэлемент selection позволяет задать цвет и фон выделенному тексту.
#elem::selection {
	color: red;
	background-color: black;
}
*/
/***
Свойство border-collapse
Свойство border-collapse заставляет двойные границы
 между ячейками td или ячейками th HTML таблицы
 (и между границей ячейки и самой таблицы)
  схлопнуться и выглядеть как одна.
  селектор {
  	border-collapse: collapse | separate;
  }
*/
/***
Свойство border-spacing
Свойство border-spacing задает отступ между ячейками td
или ячейками th HTML таблицы (и между границей ячейки и самой таблицы).
Значением свойства служат любые единицы для размеров, кроме процентов.
table {
	border-spacing: 10px 30px;
	border-collapse: separate;
	width: 400px;
	border: 1px solid red;
}
td {
	border: 1px solid red;
	text-align: center;
}
*/
/***
Свойство user-select - запрет выделения текста
Свойство user-select управляет поведением выделения
текста и других элементов на странице.
селектор {
	user-select: none | contain |
		all | auto | text;
}
none	Текст не выделяется.
contain	Выделение, начатое внутри элемента не выйдет за пределы этого элемента.
all	    Если двойной клик произошел во вложенном элементе, будет выбрано все содержимое родителя с этим значением свойства.
auto	Вычисляемое значение, автоматически определяется следующим образом: для псевдоэлементов after и before значение равно none, для редактируемого элемента значение равно contain, если у родителя элемента значение all или none - такое же будет и у самого элемента, иначе значение будет text.
text	Пользователь может выделить текст в элементе.
*/
/***
Свойство empty-cells
Свойство empty-cells указывает браузеру как отображать фон и
границу пустых ячеек td или ячеек th HTML таблицы: показывать или нет.
селектор {
	empty-cells: show | hide;
}
show	Фон и граница показываются у пустой ячейки.
hide	Фон и граница не показываются у пустой ячейки.
*/
/***
Свойство vertical-align
Свойство vertical-align устанавливает вертикальное выравнивание текста.
Свойство работает только для
строчных элементов inline, строчно-блочных
(inline-block)и для таблиц. Для блочных элементов работать не будет.
селектор {
	vertical-align: bottom | top | middle | sub |
	 super | baseline | text-bottom | text-top;
}
bottom	   По нижнему краю.
top	       По верхнему краю.
middle	   По центру.
sub	       Нижний индекс.
super	   Верхний индекс индекс.
baseline	По базовой линии.
text-bottom	По самому нижнему краю строки.
text-top	По самому верхнему краю строки.
*/

Вставка псевдоэлементов на CSS

/***
Псевдоэлемент after
Псевдоэлемент after вставляет текст после элемента.
Используется только совместно
со свойством content, которое задает текст, который следует вставить.
селектор::after {
	content: 'текст';
}
*/
/***
Псевдоэлемент before
Псевдоэлемент before вставляет текст перед элементом.
Используется только совместно
со свойством content, которое задает текст, который следует вставить.
селектор::before {
	content: 'текст';
}
*/
/***
Свойство counter-increment
Свойство counter-increment задает автоматическую
нумерацию элементов, например, абзацев или заголовков.
Используется совместно со свойством counter-reset,
псевдоэлементами after и before, свойством content,
внутри которого используется функция counter.
селектор {
	counter-increment: название [шаг] | none;
}
#parent {
	counter-reset: test;
}
#parent p::before {
	counter-increment: test;
	content: "№" counter(test) ".";
}
#parent {
	counter-reset: test 4;
}
#parent p::before {
	counter-increment: test 2; /* ставим двойку */
	content: "№" counter(test) ".";
}
*/
/***
Свойство counter-reset
Свойство counter-reset
 сбрасывает значение счетчика в ноль.
  Данное свойство обязательно нужно использовать при работе
   с counter-increment, при этом оно устанавливается для родителя.
   селектор {
   	counter-reset: название [начальное
   		значение] | none;
   }
*/
/***
Функция attr
Функция attr позволяет получить в CSS значение атрибута HTML тега.
селектор {
	свойство: attr(имя, тип, значение);
}
<a href="http://google.com">ссылка</a>
a::after {
	content: ' (' attr(href) ')';
}
*/
/***
<div id="parent">
	<div id="child"></div>
</div>
#child {
	width: calc(100% - 50px);
	height: 100px;
	margin: 0 auto;
	border: 1px solid red;
}
#parent {
	border: 1px solid green;
}
*/

/////////////form//////////

/***
Свойство resize
Свойство resize запрещает или разрешает изменение размеров textarea
или других элементов (с другими элементами работает не во всех браузерах).
селектор {
	resize: both | horizontal | vertical | none;
}
both	Можно растягивать элемент по ширине и высоте.
horizontal	Можно растягивать элемент только по ширине.
vertical	Можно растягивать элемент только по высоте.
none	Изменять размеры элемента нельзя.
*/
/***
Поле для поиска
С помощью тега input с атрибутом type
в значении search можно создать поле для поиска.
В этом поле автоматически появится крестик для очистки этого поля.
*/
/***
Поле для ввода цвета
С помощью тега input с атрибутом type в
значении color можно создать поле для цвета.
*/
/***
Поле для ввода даты-времени
С помощью тега input с атрибутом type в значении datetime-local
 можно создать поле для ввода даты-времени.
*/
/***
Атрибут autofocus
Атрибут autofocus задает автоматический фокус ввода по умолчанию
 для полей HTML формы при загрузке страницы.
Тот элемент, которому задан атрибут autofocus,
будет иметь фокус при загрузке страницы (в нем будет моргать курсор,
 если начать вводить текст с клавиатуры - он
 будет попадать в поле с фокусом ввода).
*/
/***
Атрибут accesskey
Атрибут accesskey позволяет получить доступ к элементу
 с помощью комбинации клавиш.
Значением атрибута должна служить маленькая латинская буква или цифра.
В разных браузерах используются различные сочетания клавиш.
v Хроме и IE: Alt +
значение атрибута accesskey,
*/
/***
Тег datalist
Тег datalist создает автозаполнение для полей ввода input в HTML форме.
Суть автозаполнения: когда пользователь будет пытаться набрать
что-то в поле ввода, снизу будет появляться всплывающая подсказка,
которая будет представлять собой список доступных вариантов выбора.
Пользователь сможет выбрать один из предложенных вариантов,
не вводя его до конца.
<input type="text" list="country">
<datalist id="country">
	<option>Беларусь</option>
	<option>Бельгия</option>
	<option>Болгария</option>
</datalist>
*/
/***
Полупрозрачность элемента можно также задать через свойство opacity.
 Данное свойство также принимает дробные значения от 0 до 1.
*/
/***
Свойство text-shadow
Свойство text-shadow задает тень тексту.
В качестве значения свойство принимает 4 параметра,
перечисляемые через пробел, либо ключевое слово none,
отменяющее тень совсем (это значение по умолчанию).

сдвиг по x	Задает смещение тени по оси X.
            Положительное значение смещает вправо, отрицательное - влево.

сдвиг по y	Задает смещение тени по оси Y.
            Положительное значение смещает вниз, отрицательное - вверх.

размытие	Задает размытие тени.
            Чем больше значение - тем более размытой будет тень.
            Необязательный параметр. Если не задан - тень будет четкой.

цвет	Задает цвет тени в любых единицах для цвета.
Необязательный параметр. Если не задан - цвет тени совпадает с цветом текста.

селектор {
	text-shadow: сдвиг_по_x сдвиг_по_y размытие цвет;
}
#elem {
	text-shadow: 5px 5px 3px black;
}
*/
/***
Свойство box-shadow
Свойство box-shadow задает тень блоку.
В качестве значения свойство принимает 6 параметров,
перечисляемые через пробел,
либо ключевое слово none, отменяющее тень совсем.
селектор {
	box-shadow: inset сдвиг_по_x сдвиг_по_y
		размытие размер_тени цвет;
}
inset	Необязательный параметр.
Если он задан, то тень будет внутри контейнера, если не задан - то снаружи.
#elem {
	box-shadow: 5px 5px 3px black;
	border: 1px solid black;
	width: 300px;
	height: 50px;
}
*/